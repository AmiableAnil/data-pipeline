job {
  env = "loadtest"
  enable.distributed.checkpointing = true
  statebackend {
    blob {
      storage {
        account = "dikshaloadtest.blob.core.windows.net"
        container = "flink-check-points-store"
        checkpointing.dir = "checkpoint"
      }
    }
    base.url = "wasbs://"${job.statebackend.blob.storage.container}"@"${job.statebackend.blob.storage.account}"/"${job.statebackend.blob.storage.checkpointing.dir}
  }
}

redis {
  host = 28.0.2.92
  port = 6379
}

neo4j {
  routePath = "bolt://28.0.2.122:7687"
  graph = "domain"
}

es {
  basePath = "28.0.2.16:9200,28.0.2.13:9200,28.0.2.18:9200"
}

schema {
  basePath = "https://dikshaloadtest.blob.core.windows.net/loadtest-content/schemas/local"
  supportedVersion = {
    itemset = "2.0"
  }
}

kafka {
  broker-servers = "28.0.2.135:9092,28.0.2.136:9092,28.0.2.137:9092"
  zookeeper = "28.0.2.135:2181,28.0.2.136:2181,28.0.2.137:2181"
  producer {
    max-request-size = 1572864
  }
  input.topic = "loadtest.generate.certificate.request1"
  output.failed.topic = "loadtest.generate.certificate.failed"
  groupId = "certificate-generator-group"
  output.audit.topic = "loadtest.telemetry.raw"
}

task {
  consumer.parallelism = 1
  parallelism = 1
  notifier.parallelism = 1
  userfeed.parallelism = 1
  rc.badcharlist = "\\x00,\\\\aaa,\\aaa,Ø,Ý"
  parallelism = 1
  consumer.parallelism = 1
  checkpointing.compressed = true
  checkpointing.interval = 60000
  checkpointing.pause.between.seconds = 5000
  restart-strategy.attempts = 3
  restart-strategy.delay = 30000 # in milli-seconds
}

cert_domain_url = "https://loadtest.ntp.net.in"
cert_container_name = "loadtest-e-credentials"
cert_cloud_storage_type = "azure"
cert_azure_storage_secret = "lfOMc2YXajWPkAzTPijEBwK6ukE6EYqynOdjB9riBdikhR2njTW/IF6wJIE2oIEX47/VsoTvgmOzysHOwklLaA=="
cert_azure_storage_key = "dikshaloadtest"

service {
    certreg.basePath = "http://28.0.28.221/certreg"
    learner.basePath = "http://28.0.28.221/learner"                                                                                                                                     │
    enc.basePath = "http://28.0.28.221/enc"                                                                                                                                             │
    rc.basePath = "http://registry-service:8081/api/v1"                                                                                                                                 │
    rc.entity = "TrainingCertificate"
}

lms-cassandra {
  host = "28.0.2.51"
  port = "9042"
  keyspace = "sunbird_courses"
  user_enrolments.table = "user_enrolments"
  course_batch.table = "course_batch"
  sbkeyspace = "sunbird"
  certreg.table ="cert_registry"
}

enable.suppress.exception = true
enable.rc.certificate = true
